---
import { Icon } from "astro-icon/components";
import { Card } from "../ui/card";
import { CustomHoverCard } from "./CustomHoverCard";
import type { CollectionEntry } from "astro:content";

interface Prop {
  skill: CollectionEntry<"skill">;
}

const { skill } = Astro.props as Prop;
---

<CustomHoverCard client:load skill={skill}>
  <Card
    className="skill-card max-w-32 h-36 group cursor-pointer flex flex-col items-center text-center text-muted-foreground hover:transition-all hover:duration-300 hover:bg-terciary/5"
  >
    <div class="skill-icon-wrapper flex flex-col items-center">
      <Icon
        name={skill.data.icon}
        class="skill-icon w-12 lg:w-14 h-12 lg:h-14 filter grayscale group-hover:grayscale-0 transition-all duration-300"
      />
    </div>
    <p class="skill-text text-xs md:text-sm break-words px-3">
      {skill.data.skill}
    </p>
  </Card>
</CustomHoverCard>

<script>
  import { gsap } from "gsap";

  const cards = document.querySelectorAll(".skill-card");

  cards.forEach((card) => {
    const icon = card.querySelector(".skill-icon");
    const iconWrapper = card.querySelector(".skill-icon-wrapper");
    const text = card.querySelector(".skill-text");

    card.addEventListener("mouseenter", () => {
      // Cancelar animaciones previas
      gsap.killTweensOf([card, icon, text]);

      // Animaci칩n de la card completa
      gsap.to(card, {
        scale: 1.08,
        y: -10,
        boxShadow: "0 10px 25px rgba(0, 0, 0, 0.15)",
        duration: 0.4,
        ease: "back.out(1.5)",
        overwrite: "auto", // Sobrescribe autom치ticamente animaciones en conflicto
      });

      // Rotaci칩n y escala del icono
      gsap.to(icon, {
        rotation: 360,
        scale: 1.15,
        duration: 0.6,
        ease: "back.out(1.3)",
        overwrite: "auto",
      });

      // Bounce sutil del texto
      gsap.to(text, {
        y: -5,
        duration: 0.3,
        ease: "power2.out",
        overwrite: "auto",
      });
    });

    card.addEventListener("mouseleave", () => {
      // Cancelar animaciones previas
      gsap.killTweensOf([card, icon, text]);

      // Volver al estado original
      gsap.to(card, {
        scale: 1,
        y: 0,
        boxShadow: "0 0 0 rgba(0, 0, 0, 0)",
        duration: 0.3,
        ease: "power2.inOut",
        overwrite: "auto",
      });

      gsap.to(icon, {
        rotation: 0,
        scale: 1,
        duration: 0.3,
        ease: "power2.inOut",
        overwrite: "auto",
      });

      gsap.to(text, {
        y: 0,
        duration: 0.3,
        ease: "power2.inOut",
        overwrite: "auto",
      });
    });

    // Animaci칩n de pulso continuo sutil
    gsap.to(iconWrapper, {
      scale: 1.05,
      duration: 2,
      repeat: -1,
      yoyo: true,
      ease: "sine.inOut",
    });
  });
</script>
