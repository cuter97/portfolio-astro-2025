---
import { type CollectionEntry } from "astro:content";
import { CardProject } from "@/components/common/CardProject";
import type { lenguages } from "@/i18n/ui";
import { useTranslation } from "@/lib/utils";

interface Props {
  filteredProjects?: CollectionEntry<"project">[];
  filteredSkills?: CollectionEntry<"skill">[];
}

const currentLang = Astro.currentLocale || 'en';
const t = useTranslation(currentLang as keyof typeof lenguages);
const { filteredProjects, filteredSkills } = Astro.props as Props;
---

<section id="projects" class="space-y-4 scroll-mt-24">
  <h3 class="text-3xl font-titan-one uppercase">{t("index.projects.title")}</h3>
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
    {
      filteredProjects?.map((proj) => {
        const projSkills = filteredSkills?.filter((skill) =>
          proj.data.tags.some((tag) => skill.id.endsWith(tag.id))
        );
        return <CardProject client:load info={proj} skills={projSkills} currentLang={currentLang as keyof typeof lenguages} />
      })
    }
  </div>
</section>
